name: Build image
on:
  workflow_call:
    inputs:
      containerfile:
        description: "The path to the Containerfile"
        required: true
        type: string
      image-name:
        description: "The name of the image to build"
        required: true
        type: string
      platforms:
        description: "The platforms to build the image for"
        required: false
        type: string
        default: "amd64,arm64"
    secrets:
      SIGNING_SECRET:
        description: "The private key used to sign the image"
        required: true

env:
  IMAGE_NAME: ${{ inputs.image-name }}
  CONTAINERFILE: ${{ inputs.containerfile }}
  WORKING_TAG: "run-${{ github.run_number }}"
  IMAGE_REGISTRY: "ghcr.io/${{ github.repository_owner }}"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}-${{ inputs.image-name }}
  cancel-in-progress: true

jobs:
  generate_matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix
        id: set-matrix
        run: |
          # turn the comma separated string into a list
          platforms=()
          IFS=',' read -r -a platforms <<< "${{ inputs.platforms }}"

          MATRIX="{\"include\":[]}"
          for platform in "${platforms[@]}"; do
            MATRIX=$(echo $MATRIX | jq ".include += [{\"platform\": \"$platform\"}]")
          done
          echo "matrix=$(echo $MATRIX | jq -c '.')" >> $GITHUB_OUTPUT

  build_push:
    name: Build and push image
    runs-on: ${{ matrix.platform == 'amd64' && 'ubuntu-24.04' || 'ubuntu-24.04-arm' }}
    timeout-minutes: 60
    needs: generate_matrix
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.generate_matrix.outputs.matrix)}}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Maximize build space
        if: matrix.platform != 'arm64'
        uses: ublue-os/remove-unwanted-software@cc0becac701cf642c8f0a6613bbdaf5dc36b259e # v9
        with:
          remove-codeql: true

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Build image
        id: build
        shell: bash
        run: |
          podman build \
            --security-opt=label=disable \
            --cap-add=all \
            --device /dev/fuse \
            -t ${{ env.IMAGE_NAME }}:${{ env.WORKING_TAG }} \
            -f ${{ env.CONTAINERFILE }} \
            .
